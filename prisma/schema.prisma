generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id
  name     String
  email    String
  cpf      String
  phone    String
  password String
  role     String

  createdAt DateTime? @map("created_at")
  updatedAt DateTime? @map("updated_at")

  schedules Schedule[]
  addresses Address[]

  @@map("user")
}

model Address {
  id           String   @id
  name         String
  image        String
  phones       String[]
  postalCode   String
  neighborhood String
  street       String
  number       String
  city         String
  state        String

  user   User?   @relation(fields: [userId], references: [id])
  userId String? @map("user_id")

  createdAt DateTime? @map("created_at")
  updatedAt DateTime? @map("updated_at")

  schedules Schedule[]
  Services  Services[]
  location  Location?
  calendar  Calendar?

  @@map("address")
}

model Location {
  id               String  @id
  address          String
  latitude         String
  longitude        String
  formattedAddress String
  street           String?
  number           String?
  neighborhood     String?
  city             String?
  state            String?
  postalCode       String?
  country          String?

  addressData   Address? @relation(fields: [addressDataId], references: [id])
  addressDataId String?  @unique @map("address_id")

  createdAt DateTime? @map("created_at")

  @@map("location")
}

model Services {
  id          String   @id
  serviceName String   @map("service_name")
  images      String[]
  price       String

  address   Address? @relation(fields: [addressId], references: [id])
  addressId String?  @map("address_id")

  schedules       Schedule[]
  AddressLocation AddressLocation[]

  @@map("services")
}

model Calendar {
  id        String   @id
  day       String[]
  startTime String[] @map("start_time")

  address   Address? @relation(fields: [addressId], references: [id])
  addressId String?  @unique @map("address_id")

  @@map("calendar")
}

model Schedule {
  id          String   @id
  day         String[]
  startTime   String[]
  serviceName String[] @map("service_name")

  user   User?   @relation(fields: [userId], references: [id])
  userId String? @map("user_id")

  address   Address? @relation(fields: [addressId], references: [id])
  addressId String?  @map("address_id")

  services Services[]

  @@map("schedule")
}

model AddressLocation {
  id          String   @id
  region      String
  serviceName String[] @map("service_name")

  services       Services[]
  PlacesLocation PlacesLocation[]

  @@map("address_location")
}

model PlacesLocation {
  id                String          @id
  name              String
  address           String
  latitude          String
  longitude         String
  addressLocation   AddressLocation @relation(fields: [addressLocationId], references: [id])
  addressLocationId String          @unique @map("address_location_id")

  @@map("places_location")
}
